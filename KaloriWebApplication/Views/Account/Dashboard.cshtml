@{
    ViewData["Title"] = "Dashboard";
    Layout = "_dashlayout";
}
<style>
    .content {
        background-color: rgba(192, 192, 192, 0.3);
        padding: 20px;
    }

    #calorieWarning {
        width: 50%;
        margin: 0 auto;
        text-align: center;
        padding: 10px;
        font-weight: bold;
        color: darkred;
    }

    .container-title {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 10px;
        color: black;
        margin-left: 20px;
    }

    #weekly-chart {
        background-color: lightgray;
        border-radius: 15px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        border: 2px solid #ccc; /* Border eklemek için */
        margin-top: 20px;
        margin-bottom: 20px;
        margin-left: 20px;
        margin-right:60px;

    }

    .weekly-chart-wrapper {
        max-width: 50%; 
        margin-left: 20px; 
    }

</style>

<div class="content">
<label for="startDatePicker">Başlangıç Tarihi:</label>
<input type="date" id="startDatePicker" class="form-control">
<label for="endDatePicker">Bitiş Tarihi:</label>
<input type="date" id="endDatePicker" class="form-control">
<p style="margin-top: 10px; margin-bottom: 10px; color: darkred; font-weight: bold;">Tablosunu görmek istediğiniz tarih aralığını seçiniz.</p>
<button id="showWeeklyCaloriesButton" class="btn btn-primary">Tarih Aralığını Göster</button>

<div class="chart-container" id="weekly-chart">
    <div class="container-title">7 Günlük Besin Girişi</div>
    <div class="weekly-chart-wrapper">
        <canvas id="weeklyCaloriesChart"></canvas>
    </div>
</div>
</div>

<div class="content">

    <label for="datePicker">Tarih Seç:</label>
    <input type="date" id="datePicker" class="form-control">
    <button id="showNutrientsButton" class="btn btn-primary">Eklenilen Besinleri Göster</button>

    <div id="nutrientsTable" style="display:none; margin-top: 20px;">
        <h2>Eklenilen Besinler</h2>
        <table class="table">
            <thead>
                <tr>
                    <th>Tarih</th>
                    <th>Besin</th>
                    <th>Miktar (gram)</th>
                    <th>Kalori (100 gram başına)</th>
                    <th>Aksiyon</th>
                </tr>
            </thead>
            <tbody id="nutrientsBody">
                <!-- Besin kayıtları buraya eklenecek -->
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="3" style="text-align:right;"><strong>Toplam Kalori:</strong></td>
                    <td id="totalCalories" style="font-weight:bold;"></td>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="chart-container" style="margin-top: 20px;">
        <canvas id="dailyCaloriesChart"></canvas>
    </div>
    <div id="calorieWarning"></div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="~/js/site.js"></script>
    <script>
        var dailyCalories = 0;
        var consumedCalories = 0;
        $(document).ready(function () {
            var weeklyChart;

            function fetchWeeklyCalories(startDate, endDate) {
                $.ajax({
                    url: '@Url.Action("GetWeeklyCalories", "Nutrient")',
                    type: 'GET',
                    data: { startDate: startDate, endDate: endDate },
                    success: function (response) {
                        var dates = response.map(item => new Date(item.date).toLocaleDateString());
                        var totalCalories = response.map(item => item.totalCalories);

                        if (weeklyChart) {
                            weeklyChart.destroy();
                        }

                        var ctx = document.getElementById('weeklyCaloriesChart').getContext('2d');
                        weeklyChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: dates,
                                datasets: [{
                                    label: 'Günlük Toplam Kaloriler',
                                    data: totalCalories,
                                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                    borderColor: 'rgba(0, 0, 0, 1)',
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                legend: {
                                    position: 'bottom'
                                },
                                title: {
                                    display: true,
                                    text: 'Kalori Tüketimi',
                                    fontColor: 'brown',
                                    fontSize: 18,
                                    fontStyle: 'bold'
                                },
                                scales: {
                                    xAxes: [{
                                        ticks: {
                                            fontColor: 'brown',
                                            fontStyle: 'bold'
                                        }
                                    }],
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true,
                                            fontColor: 'brown',
                                            fontStyle: 'bold'
                                        }
                                    }]
                                }
                            }
                        });
                    },
                    error: function () {
                        alert('Haftalık kalori verilerini çekerken hata oluştu.');
                    }
                });
            }

            // Dashboard yüklendiğinde son 7 günü gösterecek. Bu sadece çalıştığı anda gösterilecek default kısmı yapar.
            fetchWeeklyCalories(null, null);

            // Tarih aralığı göster butonu tıklandığında burası çalışacak
            $('#showWeeklyCaloriesButton').click(function () {
                var startDate = $('#startDatePicker').val();
                var endDate = $('#endDatePicker').val();
                if (startDate && endDate) {
                    fetchWeeklyCalories(startDate, endDate);
                } else {
                    alert('Lütfen başlangıç ve bitiş tarihlerini seçin.');
                }
            });

            var dailyChart;
            function updateChart(consumedCalories, dailyCalories) {
                var isExceeded = consumedCalories > dailyCalories;

                if (dailyChart) {
                    dailyChart.destroy();
                }

                var ctx = document.getElementById('dailyCaloriesChart').getContext('2d');
                dailyChart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Tüketilen Kaloriler', 'Kalan Kaloriler'],
                        datasets: [{
                            label: 'Günlük Kaloriler',
                            data: [consumedCalories, dailyCalories - consumedCalories],
                            backgroundColor: isExceeded ? ['rgba(255, 0, 0, 0.5)', 'rgba(255, 0, 0, 0.2)'] : ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)'],
                            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        cutoutPercentage: 80,
                        legend: {
                            position: 'bottom'
                        },
                        title: {
                            display: true,
                            text: 'Günlük Kalori Durumu',
                        }
                    }
                });

                var warningMessage = isExceeded ? `Günlük kalori limitiniz: ${dailyCalories}. Limitinizi ${consumedCalories - dailyCalories} kalori aştınız!` : '';
                $('#calorieWarning').text(warningMessage);
            }

            function fetchNutrients(date) {
                $.ajax({
                    url: '@Url.Action("GetNutrientsByDate", "Nutrient")',
                    type: 'GET',
                    data: { date: date },
                    success: function (response) {
                        $('#nutrientsBody').empty();

                        var totalCalories = 0;
                        response.forEach(function (item) {
                            $('#nutrientsBody').append(
                                `<tr>
                                        <td>${new Date(item.entryDate).toLocaleDateString()}</td>
                                        <td>${item.nutrientName}</td>
                                        <td>${item.nutrientAmount}</td>
                                        <td>${item.nutrientCalory}</td>
                                        <td><button class="btn btn-danger delete-button" data-id="${item.nutrientID}">Sil</button></td>
                                    </tr>`
                            );
                            totalCalories += item.nutrientCalory;
                        });

                        $('#totalCalories').text(totalCalories);
                        consumedCalories = totalCalories;
                        updateChart(consumedCalories, dailyCalories);
                        $('#nutrientsTable').show();
                    },
                    error: function () {
                        alert('Besin verilerini çekerken hata oluştu.');
                    }
                });
            }

            $('#showNutrientsButton').click(function () {
                var date = $('#datePicker').val();
                if (date) {
                    fetchNutrients(date);
                } else {
                    alert('Lütfen başlangıç ve bitiş tarihlerini seçin.');
                }
            });

            $('#dailyCalorieLimitInput').change(function () {
                dailyCalories = $(this).val();
                updateChart(consumedCalories, dailyCalories);
            });

            $('#nutrientsBody').on('click', '.delete-button', function () {
                var nutrientID = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("DeleteNutrient", "Nutrient")',
                    type: 'POST',
                    data: { nutrientID: nutrientID },
                    success: function () {
                        alert('Besin başarıyla silindi.');
                        $('#showNutrientsButton').click();
                    },
                    error: function () {
                        alert('Besin silinirken hata oluştu.');
                    }
                });
            });
        });
    </script>
    }